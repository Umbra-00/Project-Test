services:
  - type: web
    name: umbra-backend
    env: python
    plan: free
    branch: main
    buildCommand: |
      python -m pip install --upgrade pip
      pip install -r requirements.txt
      python validate_imports.py
    startCommand: |
      python scripts/init_db.py
      alembic upgrade head
      gunicorn -w 4 -k uvicorn.workers.UvicornWorker src.api.v1.main:app --bind 0.0.0.0:$PORT
    envVars:
      - key: PYTHON_VERSION
        value: 3.11.4
      - key: ENVIRONMENT
        value: production
      - key: DATABASE_URL
        fromDatabase:
          name: umbra-postgres
          property: connectionString
      - key: SECRET_KEY
        value: "PLEASE_REPLACE_WITH_A_STRONG_RANDOM_KEY_IN_RENDER_DASHBOARD"
      - key: PYTHONPATH
        value: "/opt/render/project/src"

  - type: web
    name: umbra-frontend
    env: python
    plan: free
    branch: main
    buildCommand: |
      python -m pip install --upgrade pip
      pip install -r requirements.txt
    startCommand: streamlit run frontend/app.py --server.port $PORT --server.enableCORS false
    envVars:
      - key: PYTHON_VERSION
        value: 3.11.4
      - key: RENDER
        value: "true"
      - key: FASTAPI_BASE_URL
        value: "https://umbra-backend.onrender.com"

  - type: pserv
    name: mlflow-tracking-server
    plan: free
    env: docker
    dockerfilePath: ./Dockerfile.mlflow
    envVars:
      - key: DATABASE_URL
        fromDatabase:
          name: umbra-postgres
          property: connectionString
      - key: MLFLOW_ENABLE_TRACKING_SERVER
        value: "true"
      - key: MLFLOW_BACKEND_STORE_URI
        fromDatabase:
          name: umbra-postgres
          property: connectionString

  - type: worker
    name: umbra-migrate-db
    env: python
    plan: free
    branch: main
    buildCommand: |
      python -m pip install --upgrade pip
      pip install -r requirements.txt
      chmod +x scripts/*.py
    startCommand: |
      echo "Initializing database..."
      python scripts/init_db.py
      echo "Running database migrations..."
      alembic upgrade head
      echo "Database setup completed"
    envVars:
      - key: DATABASE_URL
        fromDatabase:
          name: umbra-postgres
          property: connectionString
      - key: PYTHONPATH
        value: "/opt/render/project/src"

databases:
  - name: umbra-postgres
    plan: free
    ipAllowList: [] 